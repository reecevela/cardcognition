version: '3.8'

services:
  web:
    build: .
    command: gunicorn -b 0.0.0.0:8000 app:app
    onfailure: restart
    depends_on:
      - db
    volumes:
      - .:/app
    networks:
      - mynet

  nginx:
    depends_on:
      - web
    build:
      context: ./nginx
      dockerfile: Dockerfile
    onfailure: restart
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certs:/etc/nginx/certs
      - ./nginx/generate-certs.sh:/generate-certs.sh
    command: sh -c 'sh /generate-certs.sh && nginx -g "daemon off;"'
    ports:
      - 80:80
      - 443:443
    networks:
      - mynet

  db:
    image: "postgres:15"
    onfailure: restart
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./load_db.sh:/docker-entrypoint-initdb.d/load_db.sh
      - ./db.dump:/db.dump
    networks:
      - mynet

networks:
  mynet:

volumes:
  db-data:
